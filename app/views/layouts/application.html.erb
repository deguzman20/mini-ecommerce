<!DOCTYPE html>
<html>
  <head>
    <title>PowerLife PH</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag 'store-front/style.css' %>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css">
    <!-- Bootstrap core CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <!-- Material Design Bootstrap -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.7.6/css/mdb.min.css" rel="stylesheet"> 
   
    <!-- CSS -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/alertify.min.css"/>
    <!-- Default theme -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/themes/default.min.css"/>
    <!-- Semantic UI theme -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/themes/semantic.min.css"/>
    <!-- Bootstrap theme -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/themes/bootstrap.min.css"/>

    <!-- 
        RTL version
    -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/alertify.rtl.min.css"/>
    <!-- Default theme -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/themes/default.rtl.min.css"/>
    <!-- Semantic UI theme -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/themes/semantic.rtl.min.css"/>
    <!-- Bootstrap theme -->
    <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/css/themes/bootstrap.rtl.min.css"/>
    
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">

    <!-- JQuery -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- Bootstrap tooltips -->
    
    <script src="//cdn.jsdelivr.net/npm/alertifyjs@1.11.2/build/alertify.min.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.4/umd/popper.min.js"></script>
    
    <script  defer src="https://maps.googleapis.com/maps/api/js?libraries=places&language=en&key=AIzaSyA6EoPjoxYiQOrqoOe1QlC598jxwSMkWrU&callback=initialize"  type="text/javascript"></script>
    
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>

  </head>

  <body>
    <%= render 'shared/nav', get_all_products: products %>
    <%= yield %>
    <%= render 'shared/footer' %>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js"></script>
  
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.7.6/js/mdb.min.js"></script> 
  
   
   <script>
    AOS.init();
    if (typeof(Number.prototype.toRad) === "undefined") {
    Number.prototype.toRad = function() {
    return this * Math.PI / 180;
     }
   }      
   
   // this method use as callback in google map API
   function initialize(){
      geocoder = new google.maps.Geocoder();
       var input = document.getElementById('city');
       var billing_city = document.getElementById('billing_city')
      
       // create reference object for google map place autocomplete API.
       var autocomplete = new google.maps.places.Autocomplete(input);
       var city_autocomplete = new google.maps.places.Autocomplete(billing_city);
   }
  
   // Calculate the distance and return the KM of two coordinates 
   // var calculateDistance = function(lat1, lon1, lat2, lon2) {
   //  // Earth radius 
   //  var R = 6371; // km
    
   //  var dLat = (lat2-lat1).toRad();
   //  var dLon = (lon2-lon1).toRad();
   //  var lat1 = lat1.toRad();
   //  var lat2 = lat2.toRad();

   //  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
   //          Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); 
   //  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
   //  var d = R * c;
   //  // round of the return value if the the first decimal value's greater than 5 
   //  return Math.ceil(d);
   // }
   
    // this method translate the address to coordinate 
   function codeAddress()    {
    var address = document.getElementById("city").value;
    var loc=[];
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
         navigator.geolocation.getCurrentPosition(function(location) {
           // Compute the total distance of two coordinates and return the total Kilometer(KM)
           // console.log(calculateDistance(location.coords.latitude, 
           //                               location.coords.longitude, 
           //                               loc[0]=results[0].geometry.location.lat(), 
           //                               loc[1]=results[0].geometry.location.lng()))
            $.ajax({
              url: '/get_nearest_city',
              type:"GET",
              data:{
                lat: loc[0]=results[0].geometry.location.lat(),
                lng: loc[1]=results[0].geometry.location.lng()
              },
              dataType:"JSON",
                success:function(d){
                    console.log(d) 
                },
                error:function(err){
                    console.log(err)
                }
            });
         
         }); 
         return false;
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
   }

   function paymentMethodCodeAddress(){
    var address = document.getElementById("billing_city").value;
    var loc=[];
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
         navigator.geolocation.getCurrentPosition(function(location) {
           // Compute the total distance of two coordinates and return the total Kilometer(KM)
           // console.log(calculateDistance(location.coords.latitude, 
           //                               location.coords.longitude, 
           //                               loc[0]=results[0].geometry.location.lat(), 
           //                               loc[1]=results[0].geometry.location.lng()))
            $.ajax({
              url: '/get_nearest_city',
              type:"GET",
              data:{
                lat: loc[0]=results[0].geometry.location.lat(),
                lng: loc[1]=results[0].geometry.location.lng()
              },
              dataType:"JSON",
                success:function(d){
                    console.log(d) 
                },
                error:function(err){
                    console.log(err)
                }
            });
         
         }); 
         return false;
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
   } 


  </script>
  </body>
</html>